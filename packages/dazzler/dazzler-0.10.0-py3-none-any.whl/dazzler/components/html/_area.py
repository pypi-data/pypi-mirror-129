"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Area(Component):
    """

    """
    children = Aspect(children=True)
    download = Aspect()
    href = Aspect()
    hrefLang = Aspect()
    media = Aspect()
    rel = Aspect()
    target = Aspect()
    referrerPolicy = Aspect(docstring="(Possible values: '', 'no-referrer', 'no-referrer-when-downgrade', 'origin', 'origin-when-cross-origin', 'same-origin', 'strict-origin', 'strict-origin-when-cross-origin', 'unsafe-url')")  # noqa: E501
    accessKey = Aspect()
    contentEditable = Aspect()
    contextMenu = Aspect()
    dir = Aspect()
    draggable = Aspect()
    hidden = Aspect()
    id = Aspect()
    lang = Aspect()
    placeholder = Aspect()
    slot = Aspect()
    spellCheck = Aspect()
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501
    tabIndex = Aspect()
    title = Aspect()
    translate = Aspect(docstring="(Possible values: 'yes', 'no')")
    radioGroup = Aspect()
    role = Aspect()
    about = Aspect()
    datatype = Aspect()
    inlist = Aspect()
    prefix = Aspect()
    property = Aspect()
    resource = Aspect()
    typeof = Aspect()
    vocab = Aspect()
    autoCapitalize = Aspect()
    autoCorrect = Aspect()
    autoSave = Aspect()
    color = Aspect()
    itemProp = Aspect()
    itemScope = Aspect()
    itemType = Aspect()
    itemID = Aspect()
    itemRef = Aspect()
    results = Aspect()
    security = Aspect()
    unselectable = Aspect(docstring="(Possible values: 'on', 'off')")
    inputMode = Aspect(docstring="Hints at the type of data that might be entered by the user while editing the element or its contents@,see,https,://html.spec.whatwg.org/multipage/interaction.html#input-modalities:-the-inputmode-attribute (Possible values: 'none', 'search', 'text', 'tel', 'url', 'email', 'numeric', 'decimal')")  # noqa: E501
    alt = Aspect()
    coords = Aspect()
    shape = Aspect()
    handle_clicks = Aspect()
    clicks = Aspect()
    click_event = Aspect()
    handle_hover = Aspect()
    is_hovered = Aspect()
    handle_load = Aspect()
    is_loaded = Aspect()
    handle_focus = Aspect()
    is_focused = Aspect()
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501

    def __init__(
            self,
            children: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            download: typing.Optional[typing.Any] = UNDEFINED,
            href: typing.Optional[str] = UNDEFINED,
            hrefLang: typing.Optional[str] = UNDEFINED,
            media: typing.Optional[str] = UNDEFINED,
            rel: typing.Optional[str] = UNDEFINED,
            target: typing.Optional[str] = UNDEFINED,
            referrerPolicy: typing.Optional[typing.Any] = UNDEFINED,
            accessKey: typing.Optional[str] = UNDEFINED,
            contentEditable: typing.Optional[typing.Any] = UNDEFINED,
            contextMenu: typing.Optional[str] = UNDEFINED,
            dir: typing.Optional[str] = UNDEFINED,
            draggable: typing.Optional[typing.Any] = UNDEFINED,
            hidden: typing.Optional[bool] = UNDEFINED,
            id: typing.Optional[str] = UNDEFINED,
            lang: typing.Optional[str] = UNDEFINED,
            placeholder: typing.Optional[str] = UNDEFINED,
            slot: typing.Optional[str] = UNDEFINED,
            spellCheck: typing.Optional[typing.Any] = UNDEFINED,
            style: typing.Optional[typing.Union[typing.Dict]] = UNDEFINED,
            tabIndex: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            title: typing.Optional[str] = UNDEFINED,
            translate: typing.Optional[typing.Any] = UNDEFINED,
            radioGroup: typing.Optional[str] = UNDEFINED,
            role: typing.Optional[typing.Any] = UNDEFINED,
            about: typing.Optional[str] = UNDEFINED,
            datatype: typing.Optional[str] = UNDEFINED,
            inlist: typing.Optional[typing.Any] = UNDEFINED,
            prefix: typing.Optional[str] = UNDEFINED,
            property: typing.Optional[str] = UNDEFINED,
            resource: typing.Optional[str] = UNDEFINED,
            typeof: typing.Optional[str] = UNDEFINED,
            vocab: typing.Optional[str] = UNDEFINED,
            autoCapitalize: typing.Optional[str] = UNDEFINED,
            autoCorrect: typing.Optional[str] = UNDEFINED,
            autoSave: typing.Optional[str] = UNDEFINED,
            color: typing.Optional[str] = UNDEFINED,
            itemProp: typing.Optional[str] = UNDEFINED,
            itemScope: typing.Optional[bool] = UNDEFINED,
            itemType: typing.Optional[str] = UNDEFINED,
            itemID: typing.Optional[str] = UNDEFINED,
            itemRef: typing.Optional[str] = UNDEFINED,
            results: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            security: typing.Optional[str] = UNDEFINED,
            unselectable: typing.Optional[typing.Any] = UNDEFINED,
            inputMode: typing.Optional[typing.Any] = UNDEFINED,
            alt: typing.Optional[str] = UNDEFINED,
            coords: typing.Optional[str] = UNDEFINED,
            shape: typing.Optional[str] = UNDEFINED,
            handle_clicks: typing.Optional[bool] = UNDEFINED,
            clicks: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            click_event: typing.Optional[typing.Any] = UNDEFINED,
            handle_hover: typing.Optional[bool] = UNDEFINED,
            is_hovered: typing.Optional[bool] = UNDEFINED,
            handle_load: typing.Optional[bool] = UNDEFINED,
            is_loaded: typing.Optional[bool] = UNDEFINED,
            handle_focus: typing.Optional[bool] = UNDEFINED,
            is_focused: typing.Optional[bool] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            identity: str = None
    ):
        """
        :param children:
        :param download:
        :param href:
        :param hrefLang:
        :param media:
        :param rel:
        :param target:
        :param referrerPolicy: (Possible values: '', 'no-referrer', 'no-
            referrer-when-downgrade', 'origin', 'origin-when-cross-origin',
            'same-origin', 'strict-origin', 'strict-origin-when-cross-origin',
            'unsafe-url')
        :param accessKey:
        :param contentEditable:
        :param contextMenu:
        :param dir:
        :param draggable:
        :param hidden:
        :param id:
        :param lang:
        :param placeholder:
        :param slot:
        :param spellCheck:
        :param style: Style object for the top level wrapper of the
            component.
        :param tabIndex:
        :param title:
        :param translate: (Possible values: 'yes', 'no')
        :param radioGroup:
        :param role:
        :param about:
        :param datatype:
        :param inlist:
        :param prefix:
        :param property:
        :param resource:
        :param typeof:
        :param vocab:
        :param autoCapitalize:
        :param autoCorrect:
        :param autoSave:
        :param color:
        :param itemProp:
        :param itemScope:
        :param itemType:
        :param itemID:
        :param itemRef:
        :param results:
        :param security:
        :param unselectable: (Possible values: 'on', 'off')
        :param inputMode: Hints at the type of data that might be entered
            by the user while editing the element or its contents @,see,https,:
            //html.spec.whatwg.org/multipage/interaction.html#input-
            modalities:-the-inputmode-attribute (Possible values: 'none',
            'search', 'text', 'tel', 'url', 'email', 'numeric', 'decimal')
        :param alt:
        :param coords:
        :param shape:
        :param handle_clicks:
        :param clicks:
        :param click_event:
        :param handle_hover:
        :param is_hovered:
        :param handle_load:
        :param is_loaded:
        :param handle_focus:
        :param is_focused:
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        """
        Component.__init__(self, locals(), identity)

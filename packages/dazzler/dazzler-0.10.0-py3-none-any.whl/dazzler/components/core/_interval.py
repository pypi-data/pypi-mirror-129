"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Interval(Component):
    """
    Update ``times`` aspect every interval to trigger a binding.
    """
    timeout = Aspect(default=1000, docstring="The delay between each time. (default=1000)")  # noqa: E501
    times = Aspect(default=0, docstring="Number of times the interval was fired. (default=0)")  # noqa: E501
    active = Aspect(default=True, docstring="Enable/disable the interval loop. (default=True)")  # noqa: E501
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            timeout: typing.Optional[typing.Union[float, int]] = 1000,
            times: typing.Optional[typing.Union[float, int]] = 0,
            active: typing.Optional[bool] = True,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param timeout: The delay between each time. (default=1000)
        :param times: Number of times the interval was fired. (default=0)
        :param active: Enable/disable the interval loop. (default=True)
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

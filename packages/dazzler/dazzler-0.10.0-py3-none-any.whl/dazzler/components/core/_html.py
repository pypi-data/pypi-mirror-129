"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Html(Component):
    """
    Html tag wrapper, give any props as ``attributes``.
    Listen to events with the readonly event aspect containing the
    latest event fired.
    """
    tag = Aspect(required=True, docstring="Tag name of the component.")
    children = Aspect(children=True, docstring="Children of the html tag.")
    id = Aspect(docstring="Id of the element in DOM.")
    attributes = Aspect(docstring="Any other html attributes relevant to the html tag")  # noqa: E501
    events = Aspect(docstring="Events to subscribe.")
    event = Aspect(docstring="Last event fired.")
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            tag: str,
            children: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            id: typing.Optional[str] = UNDEFINED,
            attributes: typing.Optional[typing.Any] = UNDEFINED,
            events: typing.Optional[typing.List[str]] = UNDEFINED,
            event: typing.Optional[typing.Dict] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param tag: Tag name of the component.
        :param children: Children of the html tag.
        :param id: Id of the element in DOM.
        :param attributes: Any other html attributes relevant to the html
            tag
        :param events: Events to subscribe.
        :param event: Last event fired.
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

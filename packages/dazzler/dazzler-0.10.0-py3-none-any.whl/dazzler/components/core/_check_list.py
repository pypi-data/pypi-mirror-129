"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class CheckList(Component):
    """
    A list of labels with options, the values aspect get all selected options.
    """
    options = Aspect(required=True, docstring="Items in the checklist with labels, values and elements attributes.")  # noqa: E501
    values = Aspect(default=UNDEFINED, docstring="Checked values (default=[])")
    labels_class_name = Aspect(docstring="Global class name to give to labels.")  # noqa: E501
    labels_style = Aspect(docstring="Global labels style objects.")
    options_class_name = Aspect(docstring="Global options class name.")
    inputs_class_name = Aspect()
    options_style = Aspect(docstring="Global style object of options.")
    id = Aspect(docstring="Html id of the component, otherwise the identity is used.")  # noqa: E501
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            options: typing.List[typing.Any],
            values: typing.Optional[typing.List[typing.Any]] = UNDEFINED,
            labels_class_name: typing.Optional[str] = UNDEFINED,
            labels_style: typing.Optional[typing.Dict] = UNDEFINED,
            options_class_name: typing.Optional[str] = UNDEFINED,
            inputs_class_name: typing.Optional[str] = UNDEFINED,
            options_style: typing.Optional[typing.Dict] = UNDEFINED,
            id: typing.Optional[str] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param options: Items in the checklist with labels, values and
            elements attributes.
        :param values: Checked values (default=[])
        :param labels_class_name: Global class name to give to labels.
        :param labels_style: Global labels style objects.
        :param options_class_name: Global options class name.
        :param inputs_class_name:
        :param options_style: Global style object of options.
        :param id: Html id of the component, otherwise the identity is
            used.
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class DataList(Component):
    """
    A html datalist (select with autocomplete).
    """
    options = Aspect(required=True, docstring="Options of the datalist.")
    id = Aspect(docstring="Unique id for the component.")
    value = Aspect(docstring="Value of the text input.")
    data_value = Aspect(docstring="The value of the selected option if found.")
    title = Aspect(docstring="Tooltip.")
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            options: typing.List[typing.Dict[str, typing.Union[str, typing.Any]]],  # noqa: E501
            id: typing.Optional[str] = UNDEFINED,
            value: typing.Optional[str] = UNDEFINED,
            data_value: typing.Optional[typing.Any] = UNDEFINED,
            title: typing.Optional[str] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param options: Options of the datalist.
        :param id: Unique id for the component.
        :param value: Value of the text input.
        :param data_value: The value of the selected option if found.
        :param title: Tooltip.
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

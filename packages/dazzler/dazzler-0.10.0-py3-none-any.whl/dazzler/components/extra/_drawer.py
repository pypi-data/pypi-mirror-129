"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Drawer(Component):
    """
    Draw content from the sides of the screen.

    :CSS:

        - ``dazzler-extra-drawer``
        - ``drawer-content``
        - ``drawer-control``
        - ``vertical``
        - ``horizontal``
        - ``right``
        - ``bottom``
    """
    children = Aspect(children=True)
    side = Aspect(default="'top'", docstring="DrawerSide to open the drawer from. (Possible values: 'top', 'left', 'right', 'bottom') (default="'top'")")  # noqa: E501
    opened = Aspect()
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            children: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            side: typing.Optional[typing.Any] = "'top'",
            opened: typing.Optional[bool] = UNDEFINED,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param children:
        :param side: DrawerSide to open the drawer from. (Possible values:
            'top', 'left', 'right', 'bottom') (default="'top'")
        :param opened:
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Notice(Component):
    """
    Browser notifications with permissions handling.
    """
    title = Aspect(required=True)
    body = Aspect(docstring="A DOMString representing the body text of the notification, which will be displayed below the title.")  # noqa: E501
    permission = Aspect(docstring="Permission granted by the user (READONLY) (Possible values: 'denied', 'granted', 'default', 'unsupported')")  # noqa: E501
    lang = Aspect(docstring="The notification's language, as specified using a DOMString representing a BCP 47 language tag.")  # noqa: E501
    badge = Aspect(docstring="A USVString containing the URL of the image used to represent the notification when there is not enough space to display the notification itself.")  # noqa: E501
    tag = Aspect(docstring="A DOMString representing an identifying tag for the notification.")  # noqa: E501
    icon = Aspect(docstring="A USVString containing the URL of an icon to be displayed in the notification.")  # noqa: E501
    image = Aspect(docstring="a USVString containing the URL of an image to be displayed in the notification.")  # noqa: E501
    vibrate = Aspect(docstring="A vibration pattern for the device's vibration hardware to emit when the notification fires.")  # noqa: E501
    require_interaction = Aspect(docstring="Indicates that a notification should remain active until the user clicks or dismisses it, rather than closing automatically. The default value is false.")  # noqa: E501
    displayed = Aspect(docstring="Set to true to display the notification.")
    clicks = Aspect()
    clicks_timestamp = Aspect()
    closes = Aspect(docstring="Number of times the notification was closed.")
    closes_timestamp = Aspect()
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            title: str,
            body: typing.Optional[str] = UNDEFINED,
            permission: typing.Optional[typing.Any] = UNDEFINED,
            lang: typing.Optional[str] = UNDEFINED,
            badge: typing.Optional[str] = UNDEFINED,
            tag: typing.Optional[str] = UNDEFINED,
            icon: typing.Optional[str] = UNDEFINED,
            image: typing.Optional[str] = UNDEFINED,
            vibrate: typing.Optional[typing.Union[typing.Union[float, int], typing.List[typing.Union[float, int]]]] = UNDEFINED,  # noqa: E501
            require_interaction: typing.Optional[bool] = UNDEFINED,
            displayed: typing.Optional[bool] = UNDEFINED,
            clicks: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            clicks_timestamp: typing.Optional[typing.Union[float, int]] = UNDEFINED,  # noqa: E501
            closes: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            closes_timestamp: typing.Optional[typing.Union[float, int]] = UNDEFINED,  # noqa: E501
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param title:
        :param body: A DOMString representing the body text of the
            notification, which will be displayed below the title.
        :param permission: Permission granted by the user (READONLY)
            (Possible values: 'denied', 'granted', 'default', 'unsupported')
        :param lang: The notification's language, as specified using a
            DOMString representing a BCP 47 language tag.
        :param badge: A USVString containing the URL of the image used to
            represent the notification when there is not enough space to
            display the notification itself.
        :param tag: A DOMString representing an identifying tag for the
            notification.
        :param icon: A USVString containing the URL of an icon to be
            displayed in the notification.
        :param image: a USVString containing the URL of an image to be
            displayed in the notification.
        :param vibrate: A vibration pattern for the device's vibration
            hardware to emit when the notification fires.
        :param require_interaction: Indicates that a notification should
            remain active until the user clicks or dismisses it, rather than
            closing automatically. The default value is false.
        :param displayed: Set to true to display the notification.
        :param clicks:
        :param clicks_timestamp:
        :param closes: Number of times the notification was closed.
        :param closes_timestamp:
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

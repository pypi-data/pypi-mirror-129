"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class Tooltip(Component):
    """

    """
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501
    cursor = Aspect()
    offset = Aspect()
    viewBox = Aspect()
    label = Aspect()
    isAnimationActive = Aspect()
    animationDuration = Aspect()
    animationEasing = Aspect(docstring="(Possible values: 'linear', 'ease', 'ease-in', 'ease-out', 'ease-in-out')")  # noqa: E501
    separator = Aspect()
    content = Aspect()
    active = Aspect()
    position = Aspect()
    payload = Aspect(children=True)
    payloadUniqBy = Aspect()
    wrapperStyle = Aspect()
    wrapperClassName = Aspect()
    labelClassName = Aspect()
    contentStyle = Aspect()
    itemStyle = Aspect()
    labelStyle = Aspect()
    allowEscapeViewBox = Aspect()
    coordinate = Aspect()
    trigger = Aspect(docstring="(Possible values: 'hover', 'click')")
    shared = Aspect()
    filterNull = Aspect()
    useTranslate3d = Aspect()

    def __init__(
            self,
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            cursor: typing.Optional[typing.Any] = UNDEFINED,
            offset: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            viewBox: typing.Optional[typing.Dict[str, typing.Union[typing.Union[float, int]]]] = UNDEFINED,  # noqa: E501
            label: typing.Optional[typing.Any] = UNDEFINED,
            isAnimationActive: typing.Optional[bool] = UNDEFINED,
            animationDuration: typing.Optional[typing.Union[float, int]] = UNDEFINED,  # noqa: E501
            animationEasing: typing.Optional[typing.Any] = UNDEFINED,
            separator: typing.Optional[str] = UNDEFINED,
            content: typing.Optional[typing.Any] = UNDEFINED,
            active: typing.Optional[bool] = UNDEFINED,
            position: typing.Optional[typing.Dict[str, typing.Union[typing.Union[float, int]]]] = UNDEFINED,  # noqa: E501
            payload: typing.Optional[typing.List[typing.Dict[str, typing.Union[typing.Dict[str, typing.Union[typing.Any, typing.List, typing.Union[float, int]]], str, typing.Any, typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]], typing.Union[str, typing.Union[float, int]]]]]] = UNDEFINED,  # noqa: E501
            payloadUniqBy: typing.Optional[typing.Any] = UNDEFINED,
            wrapperStyle: typing.Optional[typing.Dict[str, typing.Union[typing.Any, typing.Union[str, typing.Union[float, int]]]]] = UNDEFINED,  # noqa: E501
            wrapperClassName: typing.Optional[str] = UNDEFINED,
            labelClassName: typing.Optional[str] = UNDEFINED,
            contentStyle: typing.Optional[typing.Dict[str, typing.Union[typing.Any, typing.Union[str, typing.Union[float, int]]]]] = UNDEFINED,  # noqa: E501
            itemStyle: typing.Optional[typing.Dict[str, typing.Union[typing.Any, typing.Union[str, typing.Union[float, int]]]]] = UNDEFINED,  # noqa: E501
            labelStyle: typing.Optional[typing.Dict[str, typing.Union[typing.Any, typing.Union[str, typing.Union[float, int]]]]] = UNDEFINED,  # noqa: E501
            allowEscapeViewBox: typing.Optional[typing.Dict[str, typing.Union[bool]]] = UNDEFINED,  # noqa: E501
            coordinate: typing.Optional[typing.Dict[str, typing.Union[typing.Union[float, int]]]] = UNDEFINED,  # noqa: E501
            trigger: typing.Optional[typing.Any] = UNDEFINED,
            shared: typing.Optional[bool] = UNDEFINED,
            filterNull: typing.Optional[bool] = UNDEFINED,
            useTranslate3d: typing.Optional[bool] = UNDEFINED,
            identity: str = None
    ):
        """
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        :param cursor:
        :param offset:
        :param viewBox:
        :param label:
        :param isAnimationActive:
        :param animationDuration:
        :param animationEasing: (Possible values: 'linear', 'ease', 'ease-
            in', 'ease-out', 'ease-in-out')
        :param separator:
        :param content:
        :param active:
        :param position:
        :param payload:
        :param payloadUniqBy:
        :param wrapperStyle:
        :param wrapperClassName:
        :param labelClassName:
        :param contentStyle:
        :param itemStyle:
        :param labelStyle:
        :param allowEscapeViewBox:
        :param coordinate:
        :param trigger: (Possible values: 'hover', 'click')
        :param shared:
        :param filterNull:
        :param useTranslate3d:
        """
        Component.__init__(self, locals(), identity)

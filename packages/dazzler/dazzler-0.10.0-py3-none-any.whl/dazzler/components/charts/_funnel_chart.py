"""Autogenerated file: DO NOT EDIT!"""
import typing  # noqa: F401
from dazzler.system import Component, Aspect, UNDEFINED  # noqa: F401


class FunnelChart(Component):
    """

    """
    height = Aspect(docstring="Height of the chart.")
    width = Aspect(docstring="Width of the chart.")
    tooltip = Aspect(children=True, docstring="Add a charts.Tooltip to the chart, displaying data on hover.")  # noqa: E501
    margin = Aspect(docstring="Spacing around the chart.")
    legend = Aspect(children=True, docstring="Add a charts.Legend to the chart.")  # noqa: E501
    syncId = Aspect(docstring="Sync two charts hover with the same id.")
    prepend_data = Aspect(docstring="Prepend data to the start of the list.")
    append_data = Aspect(docstring="Append data to the end of the list.")
    concat_data = Aspect(docstring="Concat a list of new data with the previous data.")  # noqa: E501
    delete_data = Aspect(docstring="Delete data by key and value.")
    insert_data = Aspect(docstring="Insert data at the index.")
    sort_data = Aspect(docstring="Sort the data.")
    handle_clicks = Aspect()
    clicks = Aspect()
    click_event = Aspect()
    handle_hover = Aspect()
    hovered = Aspect()
    hover_event = Aspect()
    funnels = Aspect(children=True)
    class_name = Aspect(docstring="Class name automatically added by dazzler api with a prefix for the component library.ie: core component Container become ``dazzler-core-container``.When added on the component, the class names will be concatenated.")  # noqa: E501
    style = Aspect(docstring="Style object for the top level wrapper of the component.")  # noqa: E501

    def __init__(
            self,
            height: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            width: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            tooltip: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            margin: typing.Optional[typing.Dict[str, typing.Union[typing.Union[float, int]]]] = UNDEFINED,  # noqa: E501
            legend: typing.Optional[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]] = UNDEFINED,  # noqa: E501
            syncId: typing.Optional[str] = UNDEFINED,
            prepend_data: typing.Optional[typing.Any] = UNDEFINED,
            append_data: typing.Optional[typing.Any] = UNDEFINED,
            concat_data: typing.Optional[typing.Any] = UNDEFINED,
            delete_data: typing.Optional[typing.Dict[str, typing.Union[str, typing.Any]]] = UNDEFINED,  # noqa: E501
            insert_data: typing.Optional[typing.Dict[str, typing.Union[typing.Union[float, int], typing.Any]]] = UNDEFINED,  # noqa: E501
            sort_data: typing.Optional[typing.Dict[str, typing.Union[str, typing.Any]]] = UNDEFINED,  # noqa: E501
            handle_clicks: typing.Optional[bool] = UNDEFINED,
            clicks: typing.Optional[typing.Union[float, int]] = UNDEFINED,
            click_event: typing.Optional[typing.Any] = UNDEFINED,
            handle_hover: typing.Optional[bool] = UNDEFINED,
            hovered: typing.Optional[bool] = UNDEFINED,
            hover_event: typing.Optional[typing.Any] = UNDEFINED,
            funnels: typing.Optional[typing.List[typing.Union[str, int, float, Component, typing.List[typing.Union[str, int, float, Component]]]]] = UNDEFINED,  # noqa: E501
            class_name: typing.Optional[str] = UNDEFINED,
            style: typing.Optional[typing.Dict] = UNDEFINED,
            identity: str = None
    ):
        """
        :param height: Height of the chart.
        :param width: Width of the chart.
        :param tooltip: Add a charts.Tooltip to the chart, displaying data
            on hover.
        :param margin: Spacing around the chart.
        :param legend: Add a charts.Legend to the chart.
        :param syncId: Sync two charts hover with the same id.
        :param prepend_data: Prepend data to the start of the list.
        :param append_data: Append data to the end of the list.
        :param concat_data: Concat a list of new data with the previous
            data.
        :param delete_data: Delete data by key and value.
        :param insert_data: Insert data at the index.
        :param sort_data: Sort the data.
        :param handle_clicks:
        :param clicks:
        :param click_event:
        :param handle_hover:
        :param hovered:
        :param hover_event:
        :param funnels:
        :param class_name: Class name automatically added by dazzler api
            with a prefix for the  component library. ie: core component
            Container become ``dazzler-core-container``. When added on the
            component, the class names will be concatenated.
        :param style: Style object for the top level wrapper of the
            component.
        """
        Component.__init__(self, locals(), identity)

window.trace_updater=function(t){var e={};function r(n){if(e[n])return e[n].exports;var o=e[n]={i:n,l:!1,exports:{}};return t[n].call(o.exports,o,o.exports,r),o.l=!0,o.exports}r.m=t,r.c=e,r.d=function(t,e,n){r.o(t,e)||Object.defineProperty(t,e,{enumerable:!0,get:n})},r.r=function(t){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(t,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(t,"__esModule",{value:!0})},r.t=function(t,e){if(1&e&&(t=r(t)),8&e)return t;if(4&e&&"object"==typeof t&&t&&t.__esModule)return t;var n=Object.create(null);if(r.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:t}),2&e&&"string"!=typeof t)for(var o in t)r.d(n,o,function(e){return t[e]}.bind(null,o));return n},r.n=function(t){var e=t&&t.__esModule?function(){return t.default}:function(){return t};return r.d(e,"a",e),e},r.o=function(t,e){return Object.prototype.hasOwnProperty.call(t,e)},r.p="";var n,o=function(){var t=document.currentScript;if(!t){for(var e=document.getElementsByTagName("script"),r=[],n=0;n<e.length;n++)r.push(e[n]);t=(r=r.filter((function(t){return!t.async&&!t.text&&!t.textContent}))).slice(-1)[0]}return t};if(Object.defineProperty(r,"p",{get:(n=o().src.split("/").slice(0,-1).join("/")+"/",function(){return n})}),"undefined"!=typeof jsonpScriptSrc){var i=jsonpScriptSrc;jsonpScriptSrc=function(t){var e=function(t){return/\/_dash-component-suites\//.test(t.src)}(o()),r=i(t);if(!e)return r;var n=r.split("/"),u=n.slice(-1)[0].split(".");return u.splice(1,0,"v0_0_2m1638574003"),n.splice(-1,1,u.join(".")),n.join("/")}}return r(r.s=2)}([function(t,e){t.exports=window.PropTypes},function(t,e){t.exports=window.React},function(t,e,r){"use strict";r.r(e);var n=r(1),o=r.n(n),i=r(0),u=r.n(i);function a(t){return(a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}function l(t,e){var r="undefined"!=typeof Symbol&&t[Symbol.iterator]||t["@@iterator"];if(!r){if(Array.isArray(t)||(r=function(t,e){if(!t)return;if("string"==typeof t)return c(t,e);var r=Object.prototype.toString.call(t).slice(8,-1);"Object"===r&&t.constructor&&(r=t.constructor.name);if("Map"===r||"Set"===r)return Array.from(t);if("Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r))return c(t,e)}(t))||e&&t&&"number"==typeof t.length){r&&(t=r);var n=0,o=function(){};return{s:o,n:function(){return n>=t.length?{done:!0}:{done:!1,value:t[n++]}},e:function(t){throw t},f:o}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,u=!0,a=!1;return{s:function(){r=r.call(t)},n:function(){var t=r.next();return u=t.done,t},e:function(t){a=!0,i=t},f:function(){try{u||null==r.return||r.return()}finally{if(a)throw i}}}}function c(t,e){(null==e||e>t.length)&&(e=t.length);for(var r=0,n=new Array(e);r<e;r++)n[r]=t[r];return n}function f(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}function s(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}function p(t,e){return(p=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t})(t,e)}function y(t){var e=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(t){return!1}}();return function(){var r,n=v(t);if(e){var o=v(this).constructor;r=Reflect.construct(n,arguments,o)}else r=n.apply(this,arguments);return d(this,r)}}function d(t,e){if(e&&("object"===a(e)||"function"==typeof e))return e;if(void 0!==e)throw new TypeError("Derived constructors may only return object or undefined");return function(t){if(void 0===t)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return t}(t)}function v(t){return(v=Object.setPrototypeOf?Object.getPrototypeOf:function(t){return t.__proto__||Object.getPrototypeOf(t)})(t)}var b=null,h=function(t){!function(t,e){if("function"!=typeof e&&null!==e)throw new TypeError("Super expression must either be null or a function");t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,writable:!0,configurable:!0}}),e&&p(t,e)}(u,t);var e,r,n,i=y(u);function u(){return f(this,u),i.apply(this,arguments)}return e=u,(r=[{key:"shouldComponentUpdate",value:function(t){var e=t.updateData;if(Array.isArray(e)&&e.length>1){if(null===b)return b=e[0],!0;var r=b!=e[0];return b=e[0],r}return!1}},{key:"render",value:function(){var t=this.props,e=t.id,r=t.gdID,n=t.sequentialUpdate,i=t.updateData,u=["hovertext","text","x","y"],a=document.getElementById(r);if(a&&Array.isArray(i)&&i.length>1){var c,f,s;if(a=a.getElementsByClassName("js-plotly-plot")[0],n){for(var p=1;p<i.length;p++)if(f=(c=i[p]).index,delete c.index,null!=c&&null!=f){var y,d=l(u);try{for(d.s();!(y=d.n()).done;){var v=y.value;null==c[v]?delete c[v]:Array.isArray(c[v])&&(c[v]=[c[v]])}}catch(t){d.e(t)}finally{d.f()}c.visible=a._fullData[f].visible,Plotly.restyle(a,c,f)}}else{s=new Set;for(var b=1;b<i.length;b++)for(var h=0,m=Object.keys(i[b]);h<m.length;h++){var g=m[h];s.add(g)}s.delete("visible");var j,S={},w=l(s);try{for(w.s();!(j=w.n()).done;)S[j.value]=[]}catch(t){w.e(t)}finally{w.f()}S.visible=[];for(var O=[],_=1;_<i.length;_++){c=i[_];var x,P=l(s);try{for(P.s();!(x=P.n()).done;){var A=x.value;null===c[A]?S[A].push([]):S[A].push(c[A])}}catch(t){P.e(t)}finally{P.f()}S.visible.push(a._fullData[c.index].visible),O.push(c.index)}Plotly.restyle(a,S,O)}Plotly.relayout(a,i[0])}return o.a.createElement("div",{id:e})}}])&&s(e.prototype,r),n&&s(e,n),u}(n.Component);h.defaultProps={sequentialUpdate:!0},h.propTypes={id:u.a.string,gdID:u.a.string.isRequired,sequentialUpdate:u.a.bool,updateData:u.a.array,setProps:u.a.func},r.d(e,"TraceUpdater",(function(){return h}))}]);
//# sourceMappingURL=trace_updater.min.js.map
//# sourceMappingURL=trace_updater.min.js.map
Metadata-Version: 2.1
Name: datek-jaipur
Version: 0.1.0a2
Summary: Implementation of Jaipur board game's logic
Home-page: https://gitlab.com/DAtek/datek-jaipur
License: MIT
Author: Attila Dudas
Author-email: dudasa7@gmail.com
Requires-Python: >=3.9,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.9
Requires-Dist: datek-async-fsm (>=0.1.2,<0.2.0)
Project-URL: Repository, https://gitlab.com/DAtek/datek-jaipur
Description-Content-Type: text/markdown

[![pipeline status](https://gitlab.com/DAtek/datek-jaipur/badges/master/pipeline.svg)](https://gitlab.com/DAtek/datek-jaipur/-/commits/master)
[![coverage report](https://gitlab.com/DAtek/datek-jaipur/badges/master/coverage.svg)](https://gitlab.com/DAtek/datek-jaipur/-/commits/master)

# Jaipur board game

The game rules are implemented in *Domain Driven* -ish fashion.  
A custom finite state machine is the driver and there is a console adapter available for it.

### Usage 

- Run the game with `run-console-app`


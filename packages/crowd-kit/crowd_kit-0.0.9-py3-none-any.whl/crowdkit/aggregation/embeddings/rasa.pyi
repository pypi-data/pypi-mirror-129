__all__ = [
    'RASA',
]
import crowdkit.aggregation.base
import pandas.core.frame
import pandas.core.series


class RASA(crowdkit.aggregation.base.BaseEmbeddingsAggregator):
    """Reliability Aware Sequence Aggregation
    Jiyi Li. 2019.
    A Dataset of Crowdsourced Word Sequences: Collections and Answer Aggregation for Ground Truth Creation.
    Proceedings of the First Workshop on Aggregating and Analysing Crowdsourced Annotations for NLP,
    pages 24â€“28 Hong Kong, China, November 3, 2019.
    http://doi.org/10.18653/v1/D19-5904
    Attributes:
        embeddings_and_outputs_ (DataFrame): Tasks' embeddings and outputs
            A pandas.DataFrame indexed by `task` with `embedding` and `output` columns.
    """

    def fit(
        self,
        data: pandas.core.frame.DataFrame,
        true_embeddings: pandas.core.series.Series = None
    ) -> 'RASA':
        """Args:
            data (DataFrame): Performers' outputs with their embeddings
                A pandas.DataFrame containing `task`, `performer`, `output` and `embedding` columns.
            true_embeddings (Series): Tasks' embeddings
                A pandas.Series indexed by `task` and holding corresponding embeddings.
        Returns:
            RASA: self
        """
        ...

    def fit_predict_scores(
        self,
        data: pandas.core.frame.DataFrame,
        true_embeddings: pandas.core.series.Series = None
    ) -> pandas.core.frame.DataFrame:
        """Args:
            data (DataFrame): Performers' outputs with their embeddings
                A pandas.DataFrame containing `task`, `performer`, `output` and `embedding` columns.
            true_embeddings (Series): Tasks' embeddings
                A pandas.Series indexed by `task` and holding corresponding embeddings.
        Returns:
            DataFrame: Tasks' label scores
                A pandas.DataFrame indexed by `task` such that `result.loc[task, label]`
                is the score of `label` for `task`.
        """
        ...

    def fit_predict(
        self,
        data: pandas.core.frame.DataFrame,
        true_embeddings: pandas.core.series.Series = None
    ) -> pandas.core.frame.DataFrame:
        """Args:
            data (DataFrame): Performers' outputs with their embeddings
                A pandas.DataFrame containing `task`, `performer`, `output` and `embedding` columns.
            true_embeddings (Series): Tasks' embeddings
                A pandas.Series indexed by `task` and holding corresponding embeddings.
        Returns:
            DataFrame: Tasks' embeddings and outputs
                A pandas.DataFrame indexed by `task` with `embedding` and `output` columns.
        """
        ...

    def __init__(
        self,
        n_iter: int = 100,
        alpha: float = ...
    ) -> None:
        """Method generated by attrs for class RASA.
        """
        ...

    embeddings_and_outputs_: pandas.core.frame.DataFrame
    n_iter: int
    alpha: float

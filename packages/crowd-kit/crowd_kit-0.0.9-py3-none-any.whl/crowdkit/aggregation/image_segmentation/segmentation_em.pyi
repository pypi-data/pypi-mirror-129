__all__ = [
    'SegmentationEM',
]
import crowdkit.aggregation.base
import pandas.core.frame
import pandas.core.series


class SegmentationEM(crowdkit.aggregation.base.BaseImageSegmentationAggregator):
    """The EM algorithm for the image segmentation task.
    For each task, EM algorithm is performed to classify the image pixels.
    Doris Jung-Lin Lee. 2018.
    Quality Evaluation Methods for Crowdsourced Image Segmentation
    http://ilpubs.stanford.edu:8090/1161/1/main.pdf
    Attributes:
        segmentations_ (Series): Tasks' segmentations
            A pandas.Series indexed by `task` such that `labels.loc[task]`
            is the tasks's aggregated segmentation.
    """

    def fit(self, data: pandas.core.frame.DataFrame) -> 'SegmentationEM':
        """Args:
            data (DataFrame): Performers' segmentations
                A pandas.DataFrame containing `performer`, `task` and `segmentation` columns'.

        Returns:
            SegmentationEM: self
        """
        ...

    def fit_predict(self, data: pandas.core.frame.DataFrame) -> pandas.core.series.Series:
        """Args:
            data (DataFrame): Performers' segmentations
                A pandas.DataFrame containing `performer`, `task` and `segmentation` columns'.

        Returns:
            Series: Tasks' segmentations
                A pandas.Series indexed by `task` such that `labels.loc[task]`
                is the tasks's aggregated segmentation.
        """
        ...

    def __init__(self, n_iter: int = 10) -> None:
        """Method generated by attrs for class SegmentationEM.
        """
        ...

    segmentations_: pandas.core.series.Series
    n_iter: int

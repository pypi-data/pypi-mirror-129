Metadata-Version: 2.1
Name: hyo2.grids
Version: 3.2.5
Summary: A library to read hydrographic grids.
Home-page: https://github.com/hydroffice/hyo2_grids
Author: Giuseppe Masetti
Author-email: gmasetti@ccom.unh.edu
License: LGPLv3 license
Keywords: hydrography ocean mapping survey grid
Platform: UNKNOWN
Classifier: Development Status :: 4 - Beta
Classifier: Intended Audience :: Science/Research
Classifier: Natural Language :: English
Classifier: License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.6
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Classifier: Topic :: Scientific/Engineering :: GIS
Requires-Python: >=3.6
License-File: LICENSE
License-File: AUTHORS.rst
Requires-Dist: hyo2.abc

HydrOffice Grids
================

General Info
------------

.. image:: https://www.hydroffice.org/img/hyo2.grids.png
    :alt: logo

HydrOffice is a research development environment for ocean mapping. It provides a collection of hydro-packages, each of them dealing with a specific issue of the field.
The main goal is to speed up both algorithms testing and research-2-operation.

The Grids hydro-package provides means to manage hydrographic surfaces (Caris CSAR SDK 2.1.0 and Open Navigation Surface BAG).

It is currently composed of 3 modules:

* *OcBase* is a collection of helper tools (e.g., thread-safe exceptions and logging)
* *Grids* abtracts the access to the underline Caris CSAR and ONS BAG formats, both VR and SR.
* *Gappy* detects data holidays in gridded data.


.. note:: The LGPLv3 license applies only to the repository C++ and Python code.
          Refer to the Caris' EULA for the *restrictive* licensing conditions of the CSAR SDK
          (see `caris_csar_sdk_eula.txt <https://bitbucket.org/giumas/hyo_gridder/raw/master/cxx/licenses/caris_csar_sdk_eula.txt>`_).

Dependencies
------------

For the libraries, you will need:

* `Eigen <http://eigen.tuxfamily.org/index.php?title=Main_Page>`_ 

For the *Gappy* module, you will also need:

* `OpenCV <http://opencv.org/>`_

For the Python binding, you will need:

* `Python <https://www.python.org/>`_ *[>=3.5]*
* `NumPy <http://www.numpy.org/>`_

For running some of the example scripts, you might also need:
* `Matplotlib <http://matplotlib.org/>`_


Other info
----------

* GitHub: `https://github.com/hydroffice/hyo_grids <https://github.com/hydroffice/hyo_grids>`_
* Project page: `http://www.hydroffice.org <http://www.hydroffice.org>`_
* License: LGPLv3 license (See `LICENSE <https://github.com/hydroffice/hyo_grids/raw/master/py/LICENSE>`_)


"""""""

History
-------

1.2
~~~

2017-08-29

- Support for BAG VR.

0.1
~~~

2017-03-30

- Initial commit.


"""""""

Credits
-------


Authors
~~~~~~~

This code is written and maintained by:

- `Giuseppe Masetti <mailto:gmasetti@ccom.unh.edu>`_


Contributors
~~~~~~~~~~~~

The following wonderful people contributed directly or indirectly to this project:

- `Ethan Larkham <mailto:ethanlarkham@protonmail.com>`_

Please add yourself here alphabetically when you submit your first pull request.


"""""""

How to contribute
=================

Every open source project lives from the generous help by contributors that sacrifice their time and this is no different.

To make participation as pleasant as possible, this project adheres to the `Code of Conduct`_ by the Python Software Foundation.

Here are a few hints and rules to get you started:

- Add yourself to the AUTHORS.txt_ file in an alphabetical fashion. Every contribution is valuable and shall be credited.
- If your change is noteworthy, add an entry to the changelog_.
- No contribution is too small; please submit as many fixes for typos and grammar bloopers as you can!
- Don't *ever* break backward compatibility.
- *Always* add tests and docs for your code. This is a hard rule; patches with missing tests or documentation won't be merged.
  If a feature is not tested or documented, it does not exist.
- Obey `PEP 8`_ and `PEP 257`_.
- Write `good commit messages`_.
- Ideally, `collapse`_ your commits, i.e. make your pull requests just one commit.

.. note::
   If you have something great but aren't sure whether it adheres -- or even can adhere -- to the rules above: **please submit a pull request anyway**!
   In the best case, we can mold it into something, in the worst case the pull request gets politely closed.
   There's absolutely nothing to fear.

Thank you for considering to contribute! If you have any question or concerns, feel free to reach out to us.

.. _`Code of Conduct`: http://www.python.org/psf/codeofconduct/
.. _AUTHORS.txt: https://github.com/hydroffice/hyo2_grids/raw/master/py/AUTHORS.rst
.. _changelog: https://github.com/hydroffice/hyo2_grids/raw/master/py/HISTORY.rst
.. _`PEP 8`: http://www.python.org/dev/peps/pep-0008/
.. _`PEP 257`: http://www.python.org/dev/peps/pep-0257/
.. _collapse: https://www.mercurial-scm.org/wiki/RebaseExtension
.. _`good commit messages`: http://tbaggery.com/2008/04/19/a-note-about-git-commit-messages.html



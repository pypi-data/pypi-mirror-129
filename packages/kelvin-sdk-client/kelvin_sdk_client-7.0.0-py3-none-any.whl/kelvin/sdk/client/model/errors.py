# generated by datamodel-codegen:
#   filename:  openapi.json
#   timestamp: 2021-11-18T18:21:31+00:00

from __future__ import annotations

from typing import Dict, List, Optional

from pydantic import Field

from kelvin.sdk.client.data_model import DataModelBase


class Error(DataModelBase):
    """
    Error object.

    Parameters
    ----------
    description: Optional[str]
    name: Optional[str]
    payload: Optional[List[str]]
    solution: Optional[str]
    title: Optional[str]

    """

    description: Optional[str] = None
    name: Optional[str] = None
    payload: Optional[List[str]] = Field(None, description="TODO: review")
    solution: Optional[str] = None
    title: Optional[str] = None


class ErrorMessage(DataModelBase):
    """
    ErrorMessage object.

    Parameters
    ----------
    errorPositions: Optional[Dict[str, int]]
    errors: Optional[List[Error]]

    """

    errorPositions: Optional[Dict[str, int]] = None
    errors: Optional[List[Error]] = None

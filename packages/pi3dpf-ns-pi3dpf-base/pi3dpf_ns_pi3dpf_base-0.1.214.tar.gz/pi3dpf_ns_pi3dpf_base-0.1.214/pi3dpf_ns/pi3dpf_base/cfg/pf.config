# Hints:
#   The environment variables HOME, HOSTNAME and PF_ROOT are expanded if written in the form '$HOME', '$HOSTNAME' or '$PF_ROOT'.
#   A parameter value in the form '!SECRET par_name' will be searched as 'par_name: your-secret' in all files specified by SECRETS_PATH.
#   In above example, the return value would be 'your-secret'. You MUST add an entry like 'par_name: your-secret' in the secrets file.
#   
# CAVEAT:
#   You MUST use %% to escape % in parameter values, because interpolation used by configparser.ConfigParser() is 
#   expecting patterns such as %(parameter)s and fails on single '%'. (In other words, parameter values like 'ABC%DEF' 
#   will cause configparser.ConfigParser() to throw an error. Write 'ABC%%DEF' instead.) 
#   Passwords configured using !SECRET syntax are not affected, as they are in a file not interpreted by configparser.ConfigParser().
#
#
# [campero] is a section allowing you to add host specific parameters. 
[your-raspberry-hostname]
# add host specific parameters here. Any of below parameters can be used here and will only take effect on the named host.
#
#[add-your-2nd-host-name-here] ; after uncommenting...
#
[DEFAULT]
# Do not add passwords or API keys to this file. Put them into one of the files specified in the SECRETS_PATH. This allows to share this config file with others. See $PF_ROOT/etc/examples/pf_secrets.example.txt
SECRETS_PATH                   : $HOME/.pf/pf_secrets:/etc/pf_secrets ; you may add more (first file will take precendence over the following ones)
MQTT_SERVER_NAME               : cidrano.nyx.net
MQTT_SERVER_PORT               : 1883
MQTT_CLIENT_USERNAME           : mqttuser ; username for this mqtt client to log into the MQTT server
MQTT_CLIENT_PASSWORD           : !SECRET mqtt_password
MQTT_TOPLEVEL_TOPIC            : $HOSTNAME
#
PIC_FRAME_CTL_PROG             : $PF_ROOT/bin/pictureframe.sh
PIC_FRAME_TRACE_FOPEN          : no ; allows you to monitor file activities, e.g. should picture frame fail opening a file 
PIC_FRAME_DEFAULT_PIC_LOCATION : $THIS_DIR/../pictures/
PIC_FRAME_FALLBACK_IMAGE       : $THIS_DIR/icons/4x4-transparent.png
# you may add multiple entries to PIC_FRAME_FAVORITE_DIRS. E.g.: (note the indention!)
#PIC_FRAME_FAVORITE_DIRS       :
#  photos:/opt/venvs/pi3d-pictureframe/lib/python3.7/site-packages/pi3dpf/pictures,
#  wedding:/etc/wedding,
#  birthday:/etc/birthday
PIC_FRAME_FAVORITE_DIRS        :
  photos:$THIS_DIR/../pictures/,
  more-photos:/var/tmp
#
# CEC (Consumer Electronics Control) - a HDMI feature to control attached TV (and other devices)
# requires: sudo apt install cec-utils
# you may have to tweak settings on the TV for below commands to work
# to check attached tv: 
#   echo 'scan' | cec-client -s -d 1
# turn TV on: 
#   echo 'on 0.0.0.0' | cec-client -s -d 1
# put TV in standby mode:
#   echo 'standby 0.0.0.0' | cec-client -s -d 1
#
CEC_CONTROL_TV                 : no ; setting to 'no' will speed up startup of mqttForHyperion.py
#
#
#
# Should you need to combine fonts, consider using https://fontforge.org or google noto fonts (https://www.google.com/get/noto)
# See https://superuser.com/questions/490922/merging-two-fonts for details on how to combine
#
# Fonts and more for picture frame
# 
# If you need additional characters displayed on the photo frame 1), add to PI3D_FT_CODEPOINT_RANGES like so:
# +-----------+---------------+---------------+---------------+
# |       Dec |           Oct |           Hex | Description   |
# +-----------+---------------+---------------+---------------+
# | 0010-0013 | 0o0012-0o0015 | 0x000a-0x000d | CR + LF       | (not realy needed)
# | 0032-0476 | 0o0040-0o0734 | 0x0020-0x01DC | Latin         |
# | 3584-3711 | 0o7000-0o7177 | 0x0e00-0x0e7f | Thai          |
# |           |               | 0xf000-0xf0eb | Weather-Fonts | (only in Arial+WeatherIcons-Regular.ttf)
# +-----------+---------------+---------------+---------------+
# Note: 1) Font PI3D_FT_FONT needs to hold the above given code point ranges, otherwise you will see tofu
PI3D_FT_CODEPOINT_RANGES       : 0x20-0x01DC, 0xf000-0xf0eb, 0x0e00-0x0e7f, 0x0a-0x0d
PI3D_FT_FONT                   : $THIS_DIR/../../pi3dpf_common/fonts//NotoSans+Thai+Weather.ttf ; combined font, make sure it contains all codepoints you add to PI3D_FT_CODEPOINT_RANGES
PI3D_PT_POINT_SIZE             : 80   ; [pi3d.PointText] 
PI3D_TB_SPACING                : F    ; [pi3d.TextBlock] use one of 'C', 'M', 'F', where C=Constant, M=Multiplier, F=Fixed space between chars
PI3D_TB_SPACE                  : 0.02 ; [pi3d.TextBlock] Value to set the spacing to
PI3D_TB_COLOR                  : 1.0, 1.0, 1.0, 1.0 ; [pi3d.TextBlock] color (R, G, B, Alpha-channel)
PI3D_TB_JUSTIFY                : 0.0  ; [pi3d.TextBlock] Justification position. 0.0=Left, 0.5=Center, 1.0=Right
PI3D_TB_CHAR_COUNT             : 120
PI3D_SCIS_LEN_PIX              : 600 ; can also be changed in positions.txt (len_pix). Used to control when scroll stops
PI3D_SCIS_FONT_POINT           : 60
PI3D_SCIS_FONT_COLOR           : white ; use black or white
PI3D_SCIS_BMP_DIR              : %(PF_HOME_DIR)s/owm
#PIC_TITLE_MAX_LENGTH           : 120  ; max number of characters. Used for all pi3d.TextBlock buffers
PIC_CLOCK_ENABLED              : yes ; set to yes/True and a clock will be displayed. Formatted as defined with (todo: there is no clock format!!!)
PIC_TRACK_LAST_VIEWED          : yes
PIC_CLOCK_DTFORMAT             : %%H:%%M ; use %%I:%%M %%p for 07:28 PM format. Positioning, fonts etc: see positions.txt, use entry 'clock:'
PIC_DEFAULT_REFRESH_RATE_SEC   : 360 ; try not to use low values, as there will be a lot of file access activity caused

WORLD_CLOCK_TZ1                : Europe/Zurich
WORLD_CLOCK_TZ2                : Asia/Bangkok
WORLD_CLOCK_DT_FORMAT          : CH:[TZ1:%%H:%%M] TH:[TZ2:%%H:%%M] [TZ1:%%Y-%%m-%%d]


#
# PIC_TEXT_POSITION_FILE is read on every picture refresh, so you can adjust element positions with (almost) imediate effect.
# See detailed description in PIC_TEXT_POSITION_FILE
PIC_TEXT_POSITION_FILE         : $THIS_DIR/positions.txt ; define positions of elements such as clock, png generated from libreoffice document or text string
PIC_TRACK_LAST_VIEWED_DIR      : %(PF_HOME_DIR)s/last_viewed
PIC_IFILES_CACHE_DIR           : %(PF_HOME_DIR)s/pic_name_cache
PIC_DEBUG_DIR                  : %(PF_HOME_DIR)s/dbg
#
#
# File extensions listed in PIC_EXTENSIONS are NOT case sensitive. If you need to display pictures using additional extensions, add them to below list
PIC_EXTENSIONS                 : .png, .jpg, .jpeg ; note: lower case mandatory
#
# MQTT
TOPICS_TO_SUBSCRIBE            :
  %(MQTT_TOPLEVEL_TOPIC)s/status,
  %(MQTT_TOPLEVEL_TOPIC)s/help,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/start,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/stop,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/restart,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/x11-start,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/dirlist,
  %(MQTT_TOPLEVEL_TOPIC)s/pictureframe/favdirs,
  %(MQTT_TOPLEVEL_TOPIC)s/hyperion/andi/command,
  %(MQTT_TOPLEVEL_TOPIC)s/hyperion/andi/start,
  %(MQTT_TOPLEVEL_TOPIC)s/hyperion/andi/stop,
  %(MQTT_TOPLEVEL_TOPIC)s/hyperion/andi/status,
#
#
LOG_LEVEL                      : INFO ; for LOG_LEVEL, use one of DEBUG, INFO, WARNING, ERROR, CRITICAL
LOG_DIR                        : %(PF_HOME_DIR)s/logs
#



# LED strip configuration, used in rgb-leds.py (based on the library rpi_ws281x):
LED_COUNT      : 69     ; Number of LED pixels.
LED_PIN        : 18     ; GPIO pin connected to the pixels (18 uses PWM!).
# LED_PIN      : 10     ; GPIO pin connected to the pixels (10 uses SPI /dev/spidev0.0).
LED_FREQ_HZ    : 800000 ; LED signal frequency in hertz (usually 800khz)
LED_DMA        : 10     ; DMA channel to use for generating signal (try 10)
LED_BRIGHTNESS : 255    ; Set to 0 for darkest and 255 for brightest
LED_INVERT     : False  ; True to invert the signal (when using NPN transistor level shift)
LED_CHANNEL    : 0      ; set to '1' for GPIOs 13, 19, 41, 45 or 53
LED_STRIP      : ws.SK6812_STRIP_RGBW
LED_RGB_ORDER  : GRB    ; GBR is know to be needed for SK6812





#       888                                                     888                 888
#       888                                                     888                 888
#       888                                                     888                 888
#   .d88888  .d88b.  88888b.  888d888 .d88b.   .d8888b  8888b.  888888 .d88b.   .d88888
#  d88" 888 d8P  Y8b 888 "88b 888P"  d8P  Y8b d88P"        "88b 888   d8P  Y8b d88" 888
#  888  888 88888888 888  888 888    88888888 888      .d888888 888   88888888 888  888
#  Y88b 888 Y8b.     888 d88P 888    Y8b.     Y88b.    888  888 Y88b. Y8b.     Y88b 888
#   "Y88888  "Y8888  88888P"  888     "Y8888   "Y8888P "Y888888  "Y888 "Y8888   "Y88888
#                    888
#                    888
#                    888
#
# Parameters related to the Open Weather Map (OWM) service
OWM_RETRIEVE_LOCAL_WEATHER     : yes ;  if both PIC_LIBREOFFICE_TEMPLATE_USE and OWM_FORMATSTRING are set to 'off', OWM_RETRIEVE_LOCAL_WEATHER will be set to no.
OWM_REFRESH_RATE               : 30 ; waiting period in minutes between calls to openweathermap.org. As of 2020-05-10, requests are limited to 500 per day. Note that a call must be made per language
# OWM_CITY_IDS:
#   find your city: http://bulk.openweathermap.org/sample/city.list.json.gz
#   2657896: Zürich, 2658656: Zürich (Kreis 11) / Seebach, 1120449: Mae Taeng, 1605245: Ubon Ratchathani, 1609350: Bangkok
#   list of ID, e.g. id=2658656,1120449 are supported
#   For the weather condition {description}, you may specify the language(s).
#   For example, if you wish to show English and Thai weather descriptions for Bangkok, use: 1609350:en+th
OWM_CITY_IDS                    : 2657896:de, 1120449:en+th
# OWM_API_KEY:
#   register at openweathermap.org to get your own api key!
OWM_API_KEY                    : !SECRET owm_api_key
#
# Widely used time formats:
#             12:57    - %%H:%%M
#         Mon 12:57    - %%a %%H:%%M
#  2020-05-11 12:57    - %%Y-%%m-%%d %%H:%%M
#  05/22/2020 07:28 PM - %%m/%%d/%%Y %%I:%%M %%p
# see https://docs.python.org/3.8/library/time.html#time.strftime for more information
#
# DT: DateTime. Next parameters allow to set time format
OWM_CITY_DTFORMAT              : %%a %%H:%%M ; time format for main time entry provided by OWM
OWM_SUNRISE_SUNSET_DTFORMAT    : %%H:%%M ; 24h format
#
# OWM_THAI_BA_DTFORMAT: supported formats as in https://thainlp.org/pythainlp/docs/2.0/api/util.html#pythainlp.util.thai_strftime
OWM_THAI_BA_DTFORMAT           : %%v ; %%A %%d %%B %%Y ; format for thai time, e.g. %%A %%d %%B %%Y will output วันจันทร์ 11 พฤษภาคม 2563
OWM_UNITS                      : metric ; use 'metric' or 'imperial'
OWM_LOCAL_WEATHER_URL          : http://api.openweathermap.org/data/2.5/group?units=%(OWM_UNITS)s
#
# OWM_FORMATSTRING can be specified as follows:
#  1. Fields from OWM:
#             {city}: City in text form as provided by OWM
#        {longitude}: longitude of given place/city as provided by OWM
#         {latitude}: latitude of given place/city as provided by OWM
#       {local_time}: describes age of weather information. Adheres to the time format specified in OWM_CITY_DTFORMAT
#  {local_time_thba}: adheres to the Thai time format specified in OWM_THAI_BA_DTFORMAT
#      {description}: description of current weather condition. Multiple languages supported. See OWM_CITY_IDS for details
#        {icon_only}: skip description, but display the icon normaly assigned to {description} (for brevity)
#          {sunrise}: local time of requested place. Adheres to the time format specified in OWM_SUNRISE_SUNSET_DTFORMAT
#           {sunset}: local time of requested place. Adheres to the time format specified in OWM_SUNRISE_SUNSET_DTFORMAT
#         {moonrise}: local time of requested place. Adheres to the time format specified in OWM_SUNRISE_SUNSET_DTFORMAT. Localy calculated
#          {moonset}: local time of requested place. Adheres to the time format specified in OWM_SUNRISE_SUNSET_DTFORMAT. Localy calculated
#        {moon_icon}: icon showing the current moon phase. Moon phase is localy calculated
#               {tz}: always in form GMT+n/GMT-n. (not tested on cities in timezones outside a 1h range.) 
#             {temp}: always in 0.1 of degree precision (e.g. 22.2), unit °C if OWM_UNITS set to 'metric' else °F
#        {temp_felt}: see {temp}
#         {temp_min}: see {temp}
#         {temp_max}: see {temp}
#         {pressure}: always in hPa
#         {humidity}: always in %
# 
#  2. positions.txt:
#    For additional positioning and formating options, see positions.txt (Or whatever the file's name was defined in PIC_TEXT_POSITION_FILE)
#    Note that if more than one city is selected in OWM_CITY_IDS, there is one sting per city, formated as per OWM_FORMATSTRING.
#    If you want to concatenate ALL citys to one string, use OWM_FORMATSTRING_CONCATENATE=True
#    The first city is positioned using entry 'owm_formatstring.0', the second city by 'owm_formatstring.1'
#
#  3. Formatting instructions:
#                 \n: use \n to break the line into several text blocks
#
#  4. Turn off this function by specifying 'OWM_FORMATSTRING : off/False'
#
OWM_FORMATSTRING_USE           : True ; True or False
OWM_FORMATSTRING_CONCATENATE   : ...  ; use 'False' or arbitrary characters (e.g. '...') to be used to delimit multiple cities. Only effective when more than one city specified in OWM_CITY_IDS.
OWM_FORMATSTRING               : {city}: {local_time} {local_time_thba} {description} {sunrise}/{sunset} {moon_icon} {moonrise}/{moonset} {temp} {temp_felt} min:{temp_min} max:{temp_max} {pressure} {humidity}
#
# templates take the same names as shown in above section '1. Fields from OWM', with the following exceptions:
#   - parameters in templates use  the form $city instead of {city}.
#   - if you request more than one location in OWM_CITY_IDS, you must append the field with the city id, e.g. $city2657896
#  To use templates, you must use LibreOffice Impress (LO) to edit the file PIC_LIBREOFFICE_TEMPLATE_IN. LO write, calc and draw would also work bot are not recommended.
PIC_LIBREOFFICE_TEMPLATE_USE   : on ; valid options: 'on' or 'off'
PIC_LIBREOFFICE_TEMPLATE_IN    : $THIS_DIR/weather_2_cities.odp ; the template to modify as you wish
# CAVEAT: 
#   libreoffice's 'soffice' command will re-use the input file name (PIC_LIBREOFFICE_TEMPLATE_OUT) for the output file name (PIC_LIBREOFFICE_BITMAP_OUT).
#   So make sure the file names (without extensions) of above two parameters are NOT the same
PF_HOME_DIR                    : /home/pi/.pf
PIC_LIBREOFFICE_TEMPLATE_OUT   : %(PF_HOME_DIR)s/owm/weather-out.odp   ; this file will be overwritten by the picture frame program in the interval defined in OWM_REFRESH_RATE
PIC_LIBREOFFICE_BITMAP_OUT     : %(PF_HOME_DIR)s/owm/owm_weather_libreoffice.png   ; expanded information generated using template PIC_LIBREOFFICE_TEMPLATE_OUT will be rendered as transparent png in this file
PIC_LIBREOFFICE_PNG_CONVERT_CMD: $PF_ROOT/bin/convert_to_png.sh ; path to script doing all the magic

# The following parameters are mainly consumed by now-playing.py:
# now-playing.py needs at least one of ALEXA_ACCOUNT or PLEX_ACCOUNT to work. Otherwise, now-playing.py will stop.
# PI3D_NOW_PLAYING_MODE can be set to the following values:
#   - local: a bitmap graphic file with name as per PI3D_NOW_PLAYING_BM will be generated by now-playing.py for local pick up
#            by the pi3dpf program
#   - mqtt_distributor: In addition to the 'local' activities, a JSON structure containing the information to generate PI3D_NOW_PLAYING_BM
#            will be disseminated to mqtt_receiver(s) using MQTT. Due to massive selenium resource requirements, it is
#            recommended to limit mqtt_distributor to one instance.
#   - mqtt_receiver: This mode allows (weaker) secondary machines rendering Alexa 'Now Playing' information from a mqtt_distributor.
#
# Notes:
#   - you need to have an MQTT server and credentials for 'mqtt_distributor' or 'mqtt_receiver' to work
#   - mqtt_receiver and mqtt_distributor must run the same pi3d-pictureframe version for working correctly
PI3D_NOW_PLAYING_MODE              : local ; use one of 'local', 'mqtt_distributor' or 'mqtt_receiver'
PI3D_NOW_PLAYING_RECEIVER_TOPIC    : not-configured ; hostname running service alexa-now-playing with PI3D_NOW_PLAYING_MODE='mqtt_distributor'
PI3D_NOW_PLAYING_TOP_DIR           : %(PF_HOME_DIR)s/alexa
PI3D_NOW_PLAYING_MIN_TIME          : 3 ; min amount of seconds a polling loop is forced to last, preventing high speed loops
PI3D_NOW_PLAYING_MAX_TIME          : 60 ; max amount of seconds allowed before selenium processes are restarted
PI3D_NOW_PLAYING_NICE              : 15 ; deliberately reduce scheduling priority for now-playing.py to prevent jerky pictures
PI3D_NOW_PLAYING_BM                : %(PI3D_NOW_PLAYING_TOP_DIR)s/now-playing-transparent.png
PI3D_NOW_PLAYING_ALIGN             : right ; use one of 'left' or 'right'. left: album art left, left aligned text, right: right aligned text, then album art
PI3D_NOW_PLAYING_FONT_SIZE_PX      : 60 ; font size in pixel (points = pixels * 72 / 96). Note that elements like pic_fname, pic_title and owm_formatstring.* use PI3D_SCIS_FONT_POINT
PI3D_NOW_PLAYING_ALBUM_ART_SIZE    : 160 ; size in px on the album art thumbnail
PI3D_NOW_PLAYING_COLOR             : white ; use one of 'white', 'black'
PI3D_NOW_PLAYING_COLOR_BG          : 238, 238, 238 ; light grey to soften text antialiasing
PI3D_NOW_PLAYING_SKILL_DEFS        : ["$PF_ROOT/now-playing-skills.config", "%(PF_HOME_DIR)s/now-playing-skills.config"]
PI3D_NOW_PLAYING_CHECK_IDLE_DEVICES: 60 ; interval in seconds to check idle devices for activity
PI3D_ALEXA_ACCOUNT_BASE_URL        : https://alexa.amazon.com
PI3D_ALEXA_ACCOUNT_USERNAME        : not-configured ; using 'not-configured' as username will effectively disable using Alexa account
PI3D_ALEXA_ACCOUNT_PASSWORD        : !SECRET alexa_account_password
PI3D_ALEXA_ECHO_DEVICE_TO_TRACK    : not-configured
PI3D_ENDORSED_WIDTHS_PI3D          : 4, 8, 16, 32, 48, 64, 72, 96, 128, 144, 192, 256, 288, 384, 512, 576, 640, 720, 768, 800, 960, 1024, 1080, 1920
PI3D_PLEX_ACCOUNT_BASE_URL         : http://alys.nyx.net:32400/web/index.html ; use url to your own private plex, the given won't work
PI3D_PLEX_LOGIN_CONTINUE_W         : not-configured ; Use one of 'Google', 'Facebook', 'Apple' (SMS 2FA unsupported), 'Email'
PI3D_PLEX_LOGIN_BUTTON_LABEL       : Sign In
PI3D_PLEX_ACCOUNT_USERNAME         : not-configured ; using 'not-configured' as username will effectively disable using Plex
PI3D_PLEX_ACCOUNT_PASSWORD         : !SECRET plex_account_password

# Kodi kann man auch abfragen: http://andi.nyx.net:8080/jsonrpc (siehe https://kodi.wiki/view/JSON-RPC_API/Examples#What_is_playing.3F)
# keep this comment line for bash scripts reading this file to work as expected
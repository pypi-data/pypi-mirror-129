# Add packaging directives for @PROJECT_NAME@
set(CPACK_PACKAGE_NAME
    "@PROJECT_NAME@"
    CACHE STRING "")
set(CPACK_PACKAGE_VENDOR
    "@PACKAGE_VENDOR@"
    CACHE STRING "")
set(CPACK_PACKAGE_DESCRIPTION_SUMMARY
    "@PROJECT_DESCRIPTION@"
    CACHE STRING "")
set(CPACK_PACKAGE_VERSION_MAJOR
    "@PROJECT_VERSION_MAJOR@"
    CACHE STRING "")
set(CPACK_PACKAGE_VERSION_MINOR
    "@PROJECT_VERSION_MINOR@"
    CACHE STRING "")
set(CPACK_PACKAGE_VERSION_PATCH
    "@PROJECT_VERSION_PATCH@"
    CACHE STRING "")
set(CPACK_PACKAGE_HOMEPAGE_URL
    "@PROJECT_HOMEPAGE_URL@"
    CACHE STRING "")
set(CPACK_PACKAGE_CONTACT
    "@PROJECT_CONTACT@"
    CACHE STRING "")
set(CPACK_RESOURCE_FILE_LICENSE
    "@PROJECT_LICENSE_FILE@"
    CACHE STRING "")

if(@BUILD_BOOST@
   OR @BUILD_TBB@
   OR @BUILD_ELFUTILS@
   OR @BUILD_LIBIBERTY@)
    set(CPACK_INSTALLED_DIRECTORIES
        "@CMAKE_INSTALL_PREFIX@/lib/dyninst-tpls/include" "lib/dyninst-tpls/include"
        "@CMAKE_INSTALL_PREFIX@/lib/dyninst-tpls/lib" "lib/dyninst-tpls/lib")
endif()

if(@BUILD_ELFUTILS@)
    list(APPEND CPACK_INSTALLED_DIRECTORIES "@CMAKE_INSTALL_PREFIX@/lib/dyninst-tpls/bin"
         "lib/dyninst-tpls/bin" "@CMAKE_INSTALL_PREFIX@/lib/dyninst-tpls/share"
         "lib/dyninst-tpls/share")
endif()

foreach(
    _VAR
    NAME
    VENDOR
    DESCRIPTION_SUMMARY
    VERSION_MAJOR
    VERSION_MINOR
    VERSION_PATCH
    HOMEPAGE_URL
    CONTACT)
    mark_as_advanced(CPACK_PACKAGE_${_VAR})
endforeach()
mark_as_advanced(CPACK_RESOURCE_FILE_LICENSE)
mark_as_advanced(CPACK_PACKAGING_INSTALL_PREFIX)

# Debian package specific variables
set(CPACK_DEBIAN_PACKAGE_HOMEPAGE "@PROJECT_HOMEPAGE_URL@")

macro(DYNINST_SET_CPACK_VARIABLE _VAR)
    if(DEFINED DYNINST_${_VAR} AND NOT DYNINST_${_VAR} STREQUAL "")
        set(CPACK_${_VAR} ${DYNINST_${_VAR}})
    elseif(DEFINED ENV{DYNINST_${_VAR}@)
        set(CPACK_${_VAR} $ENV{DYNINST_${_VAR}})
    else()
        set(CPACK_${_VAR} "local")
    endif()
endmacro()

dyninst_set_cpack_variable(DEBIAN_PACKAGE_RELEASE)
dyninst_set_cpack_variable(RPM_PACKAGE_RELEASE)

# RPM package specific variables
if(CPACK_PACKAGING_INSTALL_PREFIX)
    set(CPACK_RPM_EXCLUDE_FROM_AUTO_FILELIST_ADDITION "${CPACK_PACKAGING_INSTALL_PREFIX}")
endif()

# Get rpm distro
if(CPACK_RPM_PACKAGE_RELEASE)
    set(CPACK_RPM_PACKAGE_RELEASE_DIST ON)
endif()

# Prepare final version for the CPACK use
set(CPACK_PACKAGE_VERSION
    "${CPACK_PACKAGE_VERSION_MAJOR}.${CPACK_PACKAGE_VERSION_MINOR}.${CPACK_PACKAGE_VERSION_PATCH}"
    )

# Set the names now using CPACK utility
set(CPACK_DEBIAN_FILE_NAME "DEB-DEFAULT")
set(CPACK_RPM_FILE_NAME "RPM-DEFAULT")

include(CPack)

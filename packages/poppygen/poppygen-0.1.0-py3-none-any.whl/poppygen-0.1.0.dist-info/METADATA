Metadata-Version: 2.1
Name: poppygen
Version: 0.1.0
Summary: PopPyGen: Synthetic Human Population Generator for Python
Home-page: UNKNOWN
Author: Timothy L.J. Stewart
Author-email: me@tljstewart.ai
License: BSD-4
Keywords: synthetic population,,human population,demographic
Platform: UNKNOWN
Classifier: Programming Language :: Python :: 3
Classifier: License :: OSI Approved :: BSD License
Classifier: Operating System :: OS Independent
Requires-Python: >=3.9
Description-Content-Type: text/markdown
License-File: LICENSE
Requires-Dist: Bottleneck (==1.3.2)
Requires-Dist: certifi (==2021.10.8)
Requires-Dist: mkl-fft (==1.3.1)
Requires-Dist: mkl-random (==1.2.2)
Requires-Dist: mkl-service (==2.4.0)
Requires-Dist: numexpr (==2.7.3)
Requires-Dist: numpy (==1.21.2)
Requires-Dist: pandas (==1.3.4)
Requires-Dist: pip (==21.2.4)
Requires-Dist: python-dateutil (==2.8.2)
Requires-Dist: pytz (==2021.3)
Requires-Dist: scipy (==1.7.1)
Requires-Dist: setuptools (==58.0.4)
Requires-Dist: six (==1.15.0)
Requires-Dist: wheel (==0.37.0)
Requires-Dist: wincertstore (==0.2)

# PopPy
A statistically accurate synthetic human population generator for python, based on demographic and regional datasets.

#Installation
```python
pip install poppygen
```

#Usage
```python
#Note: Be Patient, this may take a few minutes for the large datasets to process.
from poppygen import PopulationGenerator
from poppygen.datasets import process_acs, process_safegraph_poi, process_pums

poi_df = process_safegraph_poi()
acs_df = process_acs()

pg = PopulationGenerator(poi_df, acs_df)

local_population = pg.generate_population(population_size=100, census_block_group=[120330001001, 120330036071])
print(local_population[0].baseline)

pg.generate_activity(population=local_population)
print(local_population[0].activity["location"])
```


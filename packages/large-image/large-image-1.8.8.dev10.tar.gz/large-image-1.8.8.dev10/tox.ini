[tox]
envlist =
  py{36,37,38,39}
  docs
  flake8
  lintclient
  lintannotationclient
skip_missing_interpreters = true
toxworkdir = {toxinidir}/build/tox

[testenv]
passenv = PYTEST_*
deps =
  -rrequirements-dev.txt
  coverage
  mock
  pooch
  pytest>=3.6
  pytest-cov>=2.6
  pytest-custom-exit-code
  pytest-girder>=3.0.4
  pytest-xdist
  celery!=4.4.4,<5
extras =
  memcached
# celery 4.4.4 is broken; avoid it until a new version is released
whitelist_externals =
  rm
  npx
# Run non-girder tests in parallel and girder tests sequentially
commands =
  rm -rf build/test/coverage/web_temp
  girder build --dev
  pytest -m 'singular' --cov-config setup.cfg --suppress-no-test-exit-code {posargs}
  pytest --numprocesses logical -m 'not singular' --cov-config setup.cfg --cov-append --suppress-no-test-exit-code {posargs}
  - npx nyc report --temp-dir build/test/coverage/web_temp --report-dir build/test/coverage --reporter cobertura --reporter text-summary
# Reduce npm chatter
setenv =
  NPM_CONFIG_FUND=false
  NPM_CONFIG_AUDIT=false
  NPM_CONFIG_AUDIT_LEVEL=high
  NPM_CONFIG_LOGLEVEL=warn
  NPM_CONFIG_PROGRESS=false
  NPM_CONFIG_PREFER_OFFLINE=true
  GDAL_PAM_ENABLED=no
  PIP_FIND_LINKS=https://girder.github.io/large_image_wheels

# To run just some non-web-client tests, do tox -e server -- -k <test name>
# Don't use this for CI or full tests.
[testenv:server]
commands =
  pytest {posargs}

[testenv:flake8]
skipsdist = true
skip_install = true
deps =
  flake8
  flake8-bugbear
  flake8-docstrings
  flake8-isort
  flake8-quotes
commands = flake8 {posargs}

[testenv:format]
skipsdist = true
skip_install = true
deps =
  isort
commands =
  isort {posargs:.}

[testenv:lintclient]
skip_install = true
usedevelop = false
deps =
changedir = {toxinidir}/girder/girder_large_image/web_client
whitelist_externals =
  npm
commands =
  npm install --no-package-lock
  npm run lint

[testenv:lintannotationclient]
skip_install = true
usedevelop = false
deps =
changedir = {toxinidir}/girder_annotation/girder_large_image_annotation/web_client
whitelist_externals =
  npm
commands =
  npm install --no-package-lock
  npm run lint

[testenv:docs]
deps =
  -rrequirements-dev.txt
  sphinx
  sphinx-rtd-theme
changedir = {toxinidir}/docs
whitelist_externals =
  make_docs.sh
commands =
  ./make_docs.sh

[isort]
line_length = 100
wrap_length = 79

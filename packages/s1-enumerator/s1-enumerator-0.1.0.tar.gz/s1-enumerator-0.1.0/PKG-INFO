Metadata-Version: 2.1
Name: s1-enumerator
Version: 0.1.0
Summary: Enumerates Sentinel-1 A/B Interferograms
Home-page: https://github.com/ACCESS-Cloud-Based-InSAR/s1-enumerator
Author: ACCESS Team
Author-email: charlie.z.marshak@jpl.nasa.gov
License: Apache 2.0
Platform: UNKNOWN
Classifier: Intended Audience :: Science/Research
Classifier: License :: OSI Approved :: BSD License
Classifier: Natural Language :: English
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Requires-Python: ~=3.8
Description-Content-Type: text/markdown
Provides-Extra: develop
License-File: LICENSE.txt

# S1-Enumerator

Uses `asf-search` to enumerate Sentinel-1 A/B pairs for interferograms.

![example](example.png)

Also provides functions to check if a [`S1-GUNW`](https://asf.alaska.edu/data-sets/derived-data-sets/sentinel-1-interferograms/) exists in the ASF DAAC.

## Install

`pip install s1-enumerator`

Requires `asf_search`, `geopandas`, `rasterio`, `requests`, and `tqdm`. See the `environment.yml`.

## Usage

See [notebooks](notebooks/) for examples.

```
from s1_enumerator import distill_all_pairs, enumerate_ifgs

# Over Los Padres National Forest, CA
point = Point(-120.0048, 34.8923)
aoi = point.buffer(1)

# Get all data from ASF Search
ifg_pairs_tiles = enumerate_ifgs(aoi,
                                 min_reference_date=datetime.datetime(2021, 7, 9),
                                 enumeration_type='tile',
                                 min_days_backward = 364,
                                 num_neighbors_ref=3,
                                 num_neighbors_sec=1,
                                 temporal_window_days=60,
                                 min_ref_tile_overlap_perc=.2,
                                 min_tile_aoi_overlap_km2=1e3,
                                 minimum_path_intersection_km2=1e3,
                                 minimum_ifg_area_km2=3e4,
                                 entire_s1_catalog=False
                                 )
# Distill for Generating IFGs
df_pairs = distill_all_pairs(ifg_pairs_tiles)
```


